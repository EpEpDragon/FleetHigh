import control
import numpy as np
import sys
import math
import json

def test(args):
    print("CALLING")
    return args

def solveK(B):
    A = np.zeros((6,6))
    # B = np.array([[2.20970869064331, 2.20970869064331, 0, -0.99433785480047, 0.52334345541594, -0.33144598736183],
    # [-2.20970869064331, 2.20970869064331, 0, -0.99433785480047, -0.52334345541594, 0.33144588007682],
    # [0, 2.20970869064331, -2.20970869064331, -0.33144595160016, 0.52334345541594, 0.99433785480047],
    # [0, 2.20970869064331, 2.20970869064331, 0.33144595160016, -0.52334345541594, 0.99433785480047],
    # [-2.20970869064331, 2.20970869064331, 0, 0.99433785480047, 0.52334345541594, 0.33144591583849],
    # [2.20970869064331, 2.20970869064331, 0, 0.99433785480047, -0.52334345541594, -0.33144598736183],
    # [0, 2.20970869064331, 2.20970869064331, 0.33144588007682, 0.52334345541594, -0.99433785480047],
    # [0, 2.20970869064331, -2.20970869064331, -0.3314460231235, -0.52334345541594, -0.99433785480047]]).transpose()

    Q = np.array([1,0,0,0,0,0],
                 [0,1,0,0,0,0],
                 [0,0,1,0,0,0],
                 [0,0,0,3,0,0],
                 [0,0,0,0,3,0],
                 [0,0,0,0,0,3])*10000
    R = np.eye(B.shape[1])

    K,S,E = control.lqr(A,B,Q,R)
    print(np.array2string(K,max_line_width=1000, separator=',', precision=2, floatmode='fixed'))

if __name__ == "__main__":
    args = sys.argv
    # print(np.array2string(test,max_line_width=1000, separator=',', precision=2, floatmode='fixed'))
    solveK(np.array(json.loads(args[1])))
    # test(args)
    # print(args)
    
